{"version":3,"sources":["webpack:///src/app/Componentes/configurar/configurar.component.ts","webpack:///src/app/Componentes/secuencia/secuencia.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/Componentes/footer/footer.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/Componentes/configurar/configurar.component.html","webpack:///src/app/Componentes/secuencia/secuencia.component.html","webpack:///src/app/Componentes/footer/footer.component.html","webpack:///src/app/app.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ConfigurarComponent","SecuenciaComponent","AppModule","AppComponent","FooterComponent","AppRoutingModule","notifierService","Csecuencias","localStorage","getItem","CminSecuencia","CmaxSecuencia","this","notifier","event","preventDefault","target","secuencias","querySelector","value","minsec","maxsec","setItem","notify","error","alert","type","message","changeData","routes","path","component","donePercent","contador","contadorSec","buenas","showTable","showResult","disabled1","disabled4","disabled7","disabledBtn","porcentaje","nuevaSecuencia","id","setInterval","timeBySec","Math","floor","AllDisable","SwitchTable","iniciar","random","j","document","getElementById","toString","clearInterval","minimo","getNumInicio","posH","getPosition","Habilitar","i","val1","responder","forRoot","useHash","title","withConfig","position","horizontal","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier'; \n\n@Component({\n  selector: 'app-configurar',\n  templateUrl: './configurar.component.html',\n  styleUrls: ['./configurar.component.css']\n})\nexport class ConfigurarComponent implements OnInit {\n\n  private readonly notifier: NotifierService;\n\n  Csecuencias: number = +localStorage.getItem('Csecuencias');\n  CminSecuencia: number = +localStorage.getItem('CminSec');\n  CmaxSecuencia: number = +localStorage.getItem('CmaxSec');\n\n  constructor( notifierService: NotifierService ) { this.notifier = notifierService; }\n\n  ngOnInit(): void { }\n\n  changeData(event: any) {\n    event.preventDefault();\n    const target = event.target;    \n    const secuencias = target.querySelector('#secuencias').value\n    const minsec = target.querySelector('#minsec').value\n    const maxsec = target.querySelector('#maxsec').value\n    try {\n      localStorage.setItem('Csecuencias', secuencias);\n      localStorage.setItem('CminSec', minsec);\n      localStorage.setItem('CmaxSec', maxsec);\n      this.notify('success', 'Parametros actualizados!')\n    } catch (error) {\n      alert(error)\n    }    \n  }\n\n  notify(type, message) {\n    this.notifier.notify( type, message );\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier'; \n\n@Component({\n  selector: 'app-secuencia',\n  templateUrl: './secuencia.component.html',\n  styleUrls: ['./secuencia.component.css']\n})\nexport class SecuenciaComponent implements OnInit {\n\n  private readonly notifier: NotifierService;\n\n  id: any\n  porcentaje: number;\n  donePercent: number = 90;\n  contador: number = 1;\n  contadorSec: number = 1;\n  buenas: number = 0\n  showTable: string = \"none\"\n  showResult: string = \"block\"\n\n  numero1: any\n  numero4: any\n  numero7: any\n\n  disabled1: boolean = true\n  disabled4: boolean = true\n  disabled7: boolean = true\n  disabledBtn: boolean = false\n\n  constructor( notifierService: NotifierService ) { \n    this.porcentaje = 0;\n    this.notifier = notifierService;\n  }\n\n  ngOnInit(): void {\n  }\n\n  iniciar(){\n    this.disabledBtn = true\n    this.nuevaSecuencia();\n    this.id = setInterval(() => {\n      this.timeBySec(); \n    },1000);\n    if (this.contadorSec == 1) {\n      this.showTable = 'block'\n      this.showResult = 'none'\n      this.porcentaje = 0\n    }\n  }\n\n  timeBySec(){\n    \n    this.contador = this.contador + 1\n\n    this.donePercent = Math.floor( (this.contadorSec * 100) / 5 )\n\n    if (this.contador > 10) {\n      this.contadorSec = this.contadorSec + 1\n      this.AllDisable()      \n      if (this.contadorSec >  +localStorage.getItem('Csecuencias')) {\n        this.notify('warning', 'Terminaron las secuencias')\n        this.contadorSec = 1\n        this.AllDisable()        \n        this.donePercent = 0\n        this.porcentaje = Math.floor( (this.buenas * 100) / +localStorage.getItem('Csecuencias') )\n        this.buenas = 0\n        this.SwitchTable()\n        return\n      }\n      this.iniciar()\n    }\n  }\n\n  getNumInicio() {    \n    return Math.floor( ( Math.random() * ((+localStorage.getItem('CmaxSec')) - (+localStorage.getItem('CminSec')) ) + (+localStorage.getItem('CminSec')) ) )\n  }\n\n  getPosition(){\n    return Math.floor( ( Math.random() * ( 3 - 1 ) + 1 ) )\n  }\n\n  AllDisable(){\n    for (let j = 1; j < 8; j++) {      \n      (<HTMLInputElement>document.getElementById(j.toString())).value = ''\n    }\n    this.disabled1 = true;\n    this.disabled4 = true;\n    this.disabled7 = true;\n    clearInterval(this.id)\n    this.contador = 1\n    this.disabledBtn = false\n  }\n\n  nuevaSecuencia(){\n    let minimo = this.getNumInicio()\n    let posH = this.getPosition()\n    this.Habilitar(posH)        \n    var i: number = 1\n    for (let j = minimo; j < minimo + 7; j++) {\n      if (posH == 1 && i == 1) { i = i + 1; continue; } \n      else if (posH == 2 && i == 4) { i = i + 1; continue; } \n      else if (posH == 3 && i == 7) { continue; }\n      (<HTMLInputElement>document.getElementById(i.toString())).value = j.toString()\n      i = i + 1\n    }\n  }\n\n  Habilitar(posH: number){\n    if (posH == 1) {\n      this.disabled1 = false\n    } else if(posH == 2){\n      this.disabled4 = false\n    } else if(posH == 3){\n      this.disabled7 = false\n    }\n  }\n\n  responder(){\n    let val1;\n    let val2;\n    for (let j = 7; j > 0; j--) {\n      val1 = (<HTMLInputElement>document.getElementById(j.toString())).value      \n      if (j > 1) {\n        val2 = (<HTMLInputElement>document.getElementById((j-1).toString())).value        \n        if ((val1 - val2) != 1) {\n          this.notify('warning', 'Respuesta incorrecta!')          \n          return\n        }\n      }      \n    }\n    this.buenas = this.buenas + 1\n    this.notify('success', 'Respuesta correcta!')\n  }\n\n  notify(type, message) {\n    this.notifier.notify( type, message );\n  }\n\n  SwitchTable(){\n    if (this.showTable == 'block') {\n      this.showTable = 'none'\n      this.showResult = 'block'\n    }else{\n      this.showTable = 'block'\n      this.showResult = 'none'\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NotifierModule } from 'angular-notifier';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SecuenciaComponent } from './Componentes/secuencia/secuencia.component';\nimport { FooterComponent } from './Componentes/footer/footer.component';\nimport { ConfigurarComponent } from './Componentes/configurar/configurar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SecuenciaComponent,\n    FooterComponent,\n    ConfigurarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NotifierModule.withConfig({\n      position: {\n        horizontal: {\n          position: 'right'\n        }\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { NotifierService } from 'angular-notifier'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pruebatecnica';\n  private readonly notifier: NotifierService;\n\n  constructor( notifierService: NotifierService ) {\n    this.notifier = notifierService;\n  }\n\n  notify(type, message) {\n    this.notifier.notify( type, message );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { \n    localStorage.setItem('Csecuencias', '5');\n    localStorage.setItem('CminSec', '1');\n    localStorage.setItem('CmaxSec', '9');\n   }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConfigurarComponent } from './Componentes/configurar/configurar.component';\nimport { SecuenciaComponent } from './Componentes/secuencia/secuencia.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecuenciaComponent\n  },\n  {\n    path: \"configurar\",\n    component: ConfigurarComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div id=\"fh5co-wrap\">\n    <header id=\"fh5co-header\">\n        <div class=\"container\">\n            <nav class=\"fh5co-main-nav\">\n                <ul>\n                    <li>\n                        <a [routerLink]=\"['/']\">\n                          <span style=\"font-size: large;\">Inicio</span>\n                        </a>\n                    </li>\n                    <li  class=\"fh5co-active\">\n                        <a [routerLink]=\"['/configurar']\">\n                            <span style=\"font-size: large;\">Configurar</span>\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    </header>\n\n    <div class=\"fh5co-hero\" style=\"background-image: url( ../../../assets/images/hero_1.jpg );\" data-stellar-background-ratio=\"0.5\">\n        <div class=\"overlay\"></div>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2 col-sm-12 col-sm-offset-0 col-xs-12 col-xs-offset-0 text-center fh5co-table\">\n              <div class=\"fh5co-intro fh5co-table-cell\">\n                <h2 >Configurar las secuencias!</h2>\n                <br><br><br>\n                <form (submit)=\"changeData($event)\">\n                    <div class=\"form-group\">\n                      <label>Cantidad de secuencias</label>\n                      <input type=\"number\" class=\"form-control\" id=\"secuencias\" [(ngModel)]=\"Csecuencias\" name=\"secuencias\" >\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Minimo número en las secuencias</label>\n                      <input type=\"number\" class=\"form-control\" id=\"minsec\" [(ngModel)]=\"CminSecuencia\" name=\"minsec\" >\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Maximo número en las secuencias</label>\n                      <input type=\"number\" class=\"form-control\" id=\"maxsec\" [(ngModel)]=\"CmaxSecuencia\" name=\"maxsec\" >\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-success  btn-lg btn-block\">Guardar</button>\n                    <notifier-container></notifier-container>\n                </form>\n                            \n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n</div> <!-- END fh5co-wrap -->","<div id=\"fh5co-wrap\">\n    <header id=\"fh5co-header\">\n        <div class=\"container\">\n            <nav class=\"fh5co-main-nav\">\n                <ul>\n                    <li  class=\"fh5co-active\">\n                        <a [routerLink]=\"['/']\">\n                            <span style=\"font-size: large;\">Inicio</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a [routerLink]=\"['/configurar']\">\n                            <span style=\"font-size: large;\">Configurar</span>\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    </header>\n\n    <div class=\"fh5co-hero\" style=\"background-image: url( ../../../assets/images/hero_4.jpg );\" data-stellar-background-ratio=\"0.5\">\n        <div class=\"overlay\"></div>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-8 col-md-offset-2 col-sm-12 col-sm-offset-0 col-xs-12 col-xs-offset-0 text-center fh5co-table\">\n              <div class=\"fh5co-intro fh5co-table-cell\">\n                <!--<h1 class=\"text-center\">Completa la secuencia!</h1>-->\n                \n                <!--Inicio tabla de secuencias-->\n                <div style=\"overflow-x:auto;\">\n\n                    <table  [style.display]=\"showTable\">\n                        <thead>\n                            <tr>\n                                <th colspan=\"7\"><h2>Complete la secuencia #{{contadorSec}}!</h2></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td>\n                                    <input type=\"number\" id=\"1\" name=\"1\" [disabled]=\"disabled1\">\n                                </td>\n                                <td>\n                                    <input type=\"number\" id=\"2\" name=\"2\" disabled>\n                                </td>\n                                <td>\n                                    <input type=\"number\" id=\"3\" name=\"3\" disabled>\n                                </td>\n                                <td>\n                                    <input type=\"number\" id=\"4\" name=\"4\" [disabled]=\"disabled4\">\n                                </td>\n                                <td>\n                                    <input type=\"number\" id=\"5\" name=\"5\" disabled>\n                                </td>\n                                <td>\n                                    <input type=\"number\" id=\"6\" name=\"6\" disabled>\n                                </td>\n                                <td>\n                                    <input type=\"number\" id=\"7\" name=\"7\" [disabled]=\"disabled7\">\n                                </td>\n                            </tr>                            \n                            </tbody>\n                    </table>\n\n                    <div [style.display]=\"showResult\">\n                        <h1>DESEMPEÑO!</h1>\n                        <div class=\"progress\" style=\"height: 100px;\">                            \n                            <div class=\"progress-bar bg-success\" role=\"progressbar\" [style.width]=\"porcentaje +'%'\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                {{porcentaje}}%\n                            </div>\n                        </div>\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"iniciar()\" [disabled]=\"disabledBtn\" >INICIAR</button>\n                    </div>\n                    \n                </div>\n\n                <!--Fin tabla de secuencias-->\n                <br>\n                \n                <div class=\"progress\" style=\"height: 30px;\" [style.display]=\"showTable\">\n                    <div class=\"progress-bar progress-bar-striped\" role=\"progressbar\" [style.width]=\"donePercent +'%'\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                        {{donePercent}}%\n                    </div>\n                </div>\n\n                <br><br>                \n                <div class=\"d-grid gap-2\" [style.display]=\"showTable\" >\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"iniciar()\" [disabled]=\"disabledBtn\" >INICIAR</button>\n                    <button type=\"button\" class=\"btn btn-success\" (click)=\"responder()\">RESPONDER</button>\n                </div>\n                <notifier-container></notifier-container>                \n              </div>\n            </div>            \n          </div>\n        </div>            \n    </div> \n</div>","<footer id=\"fh5co-footer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <h3>INSTRUCCIONES</h3>\n                <br>\n                <p style=\"text-align: justify;text-justify: inter-word;color:floralwhite;\">\n                    Ingrese el número que falta para completar la serie, en el apartado de Configurar usted puede configurar los parámetros de cuantas secuencias se mostraran por ejecución, el número mínimo que se mostrara en cada secuencia así como el número máximo que la misma mostrara.\n                </p>\n            </div>            \n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12 fh5co-copyright text-center\">\n                <p style=\"color:floralwhite;\" ><small>&copy; 2021 César Sazo. All Rights Reserved. </small> <small>Hecho con HTML5 & CSS y Bootstrap</small> </p>\n            </div>\n        </div>\n    </div>\n</footer>","<router-outlet></router-outlet>\n<app-footer></app-footer>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}